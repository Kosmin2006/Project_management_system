package ua.opnu.yura.Controller;

import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import ua.opnu.yura.DTO.AssignmentDTO;
import ua.opnu.yura.DTO.EmployeeDTO;
import ua.opnu.yura.Model.Project;
import ua.opnu.yura.Repository.ProjectRepository;
import ua.opnu.yura.Service.AssignmentService;
import ua.opnu.yura.Service.EmployeeService;

import java.util.List;
import java.util.stream.Collectors;

@RestController
@RequestMapping("/api/employees")
@RequiredArgsConstructor
public class EmployeeController {

    private final EmployeeService employeeService;
    private final AssignmentService assignmentService;
    private final ProjectRepository projectRepository;

    // 5. –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–æ–≥–æ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞
    @PostMapping
    public ResponseEntity<EmployeeDTO> createEmployee(@RequestBody EmployeeDTO dto) {
        return ResponseEntity.ok(employeeService.createEmployee(dto));
    }

    // 6. –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤
    @GetMapping
    public ResponseEntity<List<EmployeeDTO>> getAllEmployees() {
        return ResponseEntity.ok(employeeService.getAllEmployees());
    }

    // üÜï 6.1 –û—Ç—Ä–∏–º–∞—Ç–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –∑–∞ ID
    @GetMapping("/{id}")
    public ResponseEntity<EmployeeDTO> getEmployeeById(@PathVariable Long id) {
        return employeeService.getEmployeeById(id)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.notFound().build());
    }

    // 7. –û–Ω–æ–≤–∏—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞
    @PutMapping("/{id}")
    public ResponseEntity<EmployeeDTO> updateEmployee(@PathVariable Long id, @RequestBody EmployeeDTO dto) {
        return ResponseEntity.ok(employeeService.updateEmployee(id, dto));
    }

    // 8. –í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteEmployee(@PathVariable Long id) {
        employeeService.deleteEmployee(id);
        return ResponseEntity.noContent().build();
    }

    // 16. –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø—Ä–æ—î–∫—Ç–∏ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞
    @GetMapping("/{id}/projects")
    public ResponseEntity<List<Project>> getProjectsByEmployee(@PathVariable Long id) {
        List<AssignmentDTO> assignments = assignmentService.getAssignmentsByEmployee(id);
        List<Project> projects = assignments.stream()
                .map(dto -> projectRepository.findById(dto.getProjectId()).orElse(null))
                .filter(project -> project != null)
                .collect(Collectors.toList());

        return ResponseEntity.ok(projects);
    }
}
